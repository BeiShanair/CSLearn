namespace LS92
{
    internal class Program
    {
        static void Main(string[] args)
        {
            #region 值和引用

            #region 如何判断
            // 对类型按下F12，查看定义，如果定义中包含“class”则说明是引用类型，否则是值类型
            #endregion

            #region 语句块
            // 命名空间 -> 类 -> 方法 -> 各种逻辑处理
            // 上层语句块：类、结构体
            // 中层语句块：函数
            // 底层语句块：条件分支、循环等
            #endregion

            #region 变量的生命周期
            // 语句块执行结束，没有被记录的对象将被回收或变成垃圾
            // 值类型：被系统自动回收
            // 引用类型：栈上用于存内存地址的空间被系统自动回收，堆上的内容GC回收

            // 如果要让变量有更长的生命周期，可以用更高层级记录或使用静态全局变量
            #endregion

            #region 结构体中的值和引用
            // 结构体本身是值类型（该结构体没有作为其他类的成员）
            // 在结构体中的值类型，在栈上存储具体的内容
            // 在结构体中的引用类型，在栈上存储内存地址，在堆上存储具体的内容
            #endregion

            #region 类中的值和引用
            // 类本身是引用类型
            // 在类中的值类型，在堆上存储具体的内容
            // 在类中的引用类型，在堆上存储内存地址，在堆上存储具体的内容
            #endregion

            #region 数组中的存储规则
            // 数组本身是引用类型
            // 数组中的值类型，在堆上存储具体的内容
            // 数组中的引用类型，在堆上存储内存地址，在堆上存储具体的内容
            #endregion

            #region 结构体继承接口
            // 利用里氏替换原则，用接口容器装载结构体存在装箱和拆箱
            #endregion

            #endregion
        }
    }
}
